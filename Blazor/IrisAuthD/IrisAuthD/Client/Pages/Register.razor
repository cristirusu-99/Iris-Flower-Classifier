@page "/register"
@using IrisAuthD.Shared
@using IrisAuthD.Client.States
@layout LoginLayout
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider

<div class="col-8 card">
    <div class="col-12 row">
        <p>&nbsp;</p>
    </div>
    <div class="col-12 row">
        <div class="col-6" style="border-right:groove">
            <img src="/images/iris.jpg" width="400px" height="400px" />
        </div>
        <div class="col-6" style="border-left:groove">

            <EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerParameters">
                <DataAnnotationsValidator />
                <div>
                    <br /><br /><br /><br /><br />
                </div>
                <div>
                    <h3 style="font-weight:bold; color:rebeccapurple">Iris Flower</h3>
                </div>
                <div>
                    <h3 style="font-weight:bold">Create account</h3>
                </div>
                <div>
                    <br />
                </div>

                <label for="inputUsername" class="sr-only">User Name</label>
                <InputText id="inputUsername" class="form-control" placeholder="Username" autofocus @bind-Value="@registerParameters.UserName" />
                <ValidationMessage For="@(() => registerParameters.UserName)" />

                <label for="inputPassword" class="sr-only">Password</label>
                <InputText type="password" id="inputPassword" class="form-control" placeholder="Password" @bind-Value="@registerParameters.Password" />
                <ValidationMessage For="@(() => registerParameters.Password)" />

                <label for="inputPasswordConfirm" class="sr-only">Password Confirmation</label>
                <InputText type="password" id="inputPasswordConfirm" class="form-control" placeholder="Password Confirmation" @bind-Value="@registerParameters.PasswordConfirm" />
                <ValidationMessage For="@(() => registerParameters.PasswordConfirm)" />

                <button class="btn btn-lg btn-primary btn-block" type="submit">Create account</button>

                <label class="text-danger">@error</label>
                <NavLink href="login">
                    <h6 class="font-weight-normal text-center">Already have an account? Click here to login</h6>
                </NavLink>
            </EditForm>
        </div>
    </div>
 </div>
            @functions{ RegisterParameters registerParameters { get; set; } = new RegisterParameters();
                string error { get; set; }

                async Task OnSubmit()
                {
                    error = null;
                    try
                    {
                        await authStateProvider.Register(registerParameters);
                        navigationManager.NavigateTo("");
                    }
                    catch (Exception ex)
                    {
                        error = ex.Message;
                    }
                } }
